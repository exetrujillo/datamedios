[{"path":"https://exetrujillo.github.io/datamedios/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Exequiel Trujillo. Author, maintainer, copyright holder, funder. Ismael Aguayo. Author, funder. Klaus Lehmann. Author, funder.","code":""},{"path":"https://exetrujillo.github.io/datamedios/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Trujillo E, Aguayo , Lehmann K (2025). datamedios: Scraping Chilean Media. R package version 1.2.2.","code":"@Manual{,   title = {datamedios: Scraping Chilean Media},   author = {Exequiel Trujillo and Ismael Aguayo and Klaus Lehmann},   year = {2025},   note = {R package version 1.2.2}, }"},{"path":"https://exetrujillo.github.io/datamedios/index.html","id":"paquete-datamedios-versi√≥n-122","dir":"","previous_headings":"","what":"Scraping Chilean Media","title":"Scraping Chilean Media","text":"datamedios es un paquete de R dise√±ado para facilitar la extracci√≥n automatizada de noticias desde medios de comunicaci√≥n chilenos, haciendo web scraping de medios chilenos. Este paquete permite realizar b√∫squedas de noticias y filtrarlas por rangos de fechas, entregando los resultados en un formato estructurado y listo para su an√°lisis. Adem√°s, incluye funcionalidades para almacenar los datos extra√≠dos en una base de datos de manera opcional (documentaci√≥n completa).","code":""},{"path":"https://exetrujillo.github.io/datamedios/index.html","id":"id_-instalaci√≥n","dir":"","previous_headings":"","what":"üîß Instalaci√≥n","title":"Scraping Chilean Media","text":"Para instalarlo desde CRAN: Instala datamedios desde CRAN: Alternativamente, para instalar el paquete desde GitHub, sigue los siguientes pasos: Aseg√∫rate de tener instalado el paquete devtools. Si lo tienes, inst√°lalo ejecutando: Instala datamedios desde el repositorio de GitHub:","code":"install.packages(\"datamedios\") library(datamedios) install.packages(\"devtools\") devtools::install_github(\"exetrujillo/datamedios\")"},{"path":[]},{"path":"https://exetrujillo.github.io/datamedios/index.html","id":"funci√≥n-principal-extraer_noticias_fecha","dir":"","previous_headings":"üîÑ Uso","what":"Funci√≥n principal: extraer_noticias_fecha","title":"Scraping Chilean Media","text":"Esta funci√≥n permite filtrar noticias por un rango de fechas espec√≠fico, adem√°s de aplicar una frase de b√∫squeda.","code":""},{"path":"https://exetrujillo.github.io/datamedios/index.html","id":"par√°metros","dir":"","previous_headings":"üîÑ Uso > Funci√≥n principal: extraer_noticias_fecha","what":"Par√°metros:","title":"Scraping Chilean Media","text":"search_query: Frase de b√∫squeda (obligatorio). fecha_inicio: Fecha de inicio en formato \"YYYY-MM-DD\" (obligatorio). fecha_fin: Fecha de fin en formato \"YYYY-MM-DD\" (obligatorio). subir_a_bd: Por defecto est√° seteado en TRUE, para los tests lo dejamos en FALSE (opcional). \"todas\": Todas las fuentes disponibles. \"bbcl\": B√≠oB√≠o como √∫nica fuente \"emol-todas\": B√∫squeda simult√°nea en las fuentes ‚Äúemol‚Äù, ‚Äúguioteca‚Äù y ‚Äúmediosregionales‚Äù. \"emol\": Noticias pagas de El Mercurio. \"mediosregionales\": Noticias de los diarios regionales propiedad de El Mercurio. \"guioteca\": Gu√≠as especializadas de Emol. O una combinaci√≥n, solo separando medios por comas, por ejemplo: fuentes = \"mediosregionales, bbcl\".","code":""},{"path":"https://exetrujillo.github.io/datamedios/index.html","id":"valor-devuelto","dir":"","previous_headings":"üîÑ Uso > Funci√≥n principal: extraer_noticias_fecha","what":"Valor devuelto:","title":"Scraping Chilean Media","text":"Un data.frame con las siguientes columnas: ID: Identificador de la noticia. titulo: T√≠tulo de la noticia. contenido: Contenido completo. contenido limpio: Resumen o extracto. url: Enlace la noticia. url_imagen: Url con la imagen principal de la noticia. autor: Autor de la noticia. fecha: Fecha de publicaci√≥n (formato ‚ÄòYYYY-MM-DD‚Äô). resumen: Resumen de la IA o bajada de la nota, seg√∫n disponibilidad. search_query: Palabra o frase de b√∫squeda por la que se obtuvo los datos. medio: Medio al que corresponde la noticia. temas: Categor√≠as de la noticia.","code":""},{"path":"https://exetrujillo.github.io/datamedios/index.html","id":"ejemplo-de-uso","dir":"","previous_headings":"üîÑ Uso > Funci√≥n principal: extraer_noticias_fecha","what":"Ejemplo de uso:","title":"Scraping Chilean Media","text":"","code":"# Buscar noticias entre el 18 de octubre de 2019 al 18 de octubre de 2020 noticias <- extraer_noticias_fecha(\"estallido social\", \"2019-10-18\", \"2020-10-18\", fuentes = \"bbcl, emol, mediosregionales\")"},{"path":"https://exetrujillo.github.io/datamedios/index.html","id":"funci√≥n-secundaria-extraer_noticias_max_res","dir":"","previous_headings":"üîÑ Uso","what":"Funci√≥n secundaria: extraer_noticias_max_res","title":"Scraping Chilean Media","text":"Esta funci√≥n permite obtener noticias desde medios chilenos utilizando una frase de b√∫squeda. Adem√°s, puedes limitar el n√∫mero de resultados extraer.","code":""},{"path":"https://exetrujillo.github.io/datamedios/index.html","id":"par√°metros-1","dir":"","previous_headings":"üîÑ Uso > Funci√≥n secundaria: extraer_noticias_max_res","what":"Par√°metros:","title":"Scraping Chilean Media","text":"search_query: Frase de b√∫squeda (obligatorio). max_results: M√°ximo n√∫mero de resultados extraer (opcional). subir_a_bd: Por defecto est√° seteado en TRUE, pero para los tests lo dejamos en FALSE (opcional). fuentes:Es un string con las fuentes extraer. Funciona de la misma forma que en extraer_noticias_fecha. Por defecto extrae de todas las fuentes (opcional).","code":""},{"path":"https://exetrujillo.github.io/datamedios/index.html","id":"valor-devuelto-1","dir":"","previous_headings":"üîÑ Uso > Funci√≥n secundaria: extraer_noticias_max_res","what":"Valor devuelto:","title":"Scraping Chilean Media","text":"Un data.frame similar al de extraer_noticias_fecha, pero filtrado por max_results.","code":""},{"path":"https://exetrujillo.github.io/datamedios/index.html","id":"ejemplo-de-uso-1","dir":"","previous_headings":"üîÑ Uso > Funci√≥n secundaria: extraer_noticias_max_res","what":"Ejemplo de uso:","title":"Scraping Chilean Media","text":"","code":"# Buscar noticias relacionadas con \"inteligencia artificial\" noticias <- extraer_noticias_max_res(\"inteligencia artificial\", max_results = 100, fuentes= \"bbcl\")"},{"path":"https://exetrujillo.github.io/datamedios/index.html","id":"id_-documentaci√≥n","dir":"","previous_headings":"","what":"üîñ Documentaci√≥n","title":"Scraping Chilean Media","text":"Adicionalmente, el paquete incluye funciones de limpieza, manejo y visualizaci√≥n de las noticias extra√≠das. Para visitar la documentaci√≥n de todos los c√≥digos haga click aqu√≠.","code":""},{"path":"https://exetrujillo.github.io/datamedios/index.html","id":"id_-dependencias","dir":"","previous_headings":"","what":"üìä Dependencias","title":"Scraping Chilean Media","text":"Este paquete utiliza las siguientes dependencias de R para su correcto funcionamiento: dplyr: Manipulaci√≥n y an√°lisis de datos. httr: Realizaci√≥n de solicitudes HTTP para interactuar con APIs. magrittr: Uso de operadores como %>% para flujos de trabajo m√°s legibles. jsonlite: Procesamiento y conversi√≥n de datos en formato JSON. utils: Funciones utilitarias b√°sicas incluidas en R. rlang: Herramientas para manipulaci√≥n de expresiones. wordcloud2: Generaci√≥n de nubes de palabras interactivas. tidytext: An√°lisis de texto basado en datos ordenados. lubridate: Manejo y an√°lisis de datos temporales. rvest: Web scraping de p√°ginas HTML. stringr: Manejo y manipulaci√≥n de cadenas de texto. xml2: Lectura y manejo de datos en formato XML. purrr: Programaci√≥n funcional con listas y vectores. DT: Generaci√≥n de tablas interactivas en HTML desde R. ggplot2: Creaci√≥n de gr√°ficos sofisticados y personalizados basados en la gram√°tica de los gr√°ficos. plotly: Creaci√≥n de gr√°ficos interactivos y visualizaciones din√°micas.","code":""},{"path":"https://exetrujillo.github.io/datamedios/index.html","id":"id_Ô∏è-licencia","dir":"","previous_headings":"","what":"üóÇÔ∏è Licencia","title":"Scraping Chilean Media","text":"datamedios est√° bajo la Licencia MIT. Consulta el archivo LICENSE para m√°s detalles.","code":""},{"path":"https://exetrujillo.github.io/datamedios/index.html","id":"id_-autor√≠a","dir":"","previous_headings":"","what":"üë§ Autor√≠a","title":"Scraping Chilean Media","text":"Este paquete fue desarrollado por: Exequiel Trujillo (contacto: exequiel.trujillo@ug.uchile.cl) Ismael Aguayo (contacto: ismael.aguayo@ug.uchile.cl) Klaus Lehmann (contacto: klehmann@fen.uchile.cl)","code":""},{"path":"https://exetrujillo.github.io/datamedios/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Exequiel Trujillo, Ismael Aguayo & Klaus Lehmann Permission hereby granted, free charge, person obtaining copy software associated documentation files (‚ÄúSoftware‚Äù), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED ‚Äú‚Äù, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/agregar_datos_unicos.html","id":null,"dir":"Reference","previous_headings":"","what":"Agregar datos unicos a una tabla MySQL ‚Äî agregar_datos_unicos","title":"Agregar datos unicos a una tabla MySQL ‚Äî agregar_datos_unicos","text":"Esta funcion agrega datos una tabla MySQL utilizando endpoints que esperan datos en formato JSON.","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/agregar_datos_unicos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Agregar datos unicos a una tabla MySQL ‚Äî agregar_datos_unicos","text":"","code":"agregar_datos_unicos(data)"},{"path":"https://exetrujillo.github.io/datamedios/reference/agregar_datos_unicos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Agregar datos unicos a una tabla MySQL ‚Äî agregar_datos_unicos","text":"data Un data frame con los datos insertar.","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/agregar_datos_unicos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Agregar datos unicos a una tabla MySQL ‚Äî agregar_datos_unicos","text":"retorna ningun valor.","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/agregar_datos_unicos.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Agregar datos unicos a una tabla MySQL ‚Äî agregar_datos_unicos","text":"","code":"if (FALSE) { # \\dontrun{ # Agregar datos unicos noticias <- extraer_noticias_max_res(\"tesla\", max_results=10, fuentes=\"bbcl\", subir_a_bd = FALSE) agregar_datos_unicos(noticias) } # }"},{"path":"https://exetrujillo.github.io/datamedios/reference/extraccion_parrafos.html","id":null,"dir":"Reference","previous_headings":"","what":"Extraer parrafos de una columna de texto ‚Äî extraccion_parrafos","title":"Extraer parrafos de una columna de texto ‚Äî extraccion_parrafos","text":"Esta funcion procesa una columna de texto en un dataframe y extrae los parrafos que coinciden con los sinonimos proporcionados.","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/extraccion_parrafos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extraer parrafos de una columna de texto ‚Äî extraccion_parrafos","text":"","code":"extraccion_parrafos(datos, sinonimos = c())"},{"path":"https://exetrujillo.github.io/datamedios/reference/extraccion_parrafos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extraer parrafos de una columna de texto ‚Äî extraccion_parrafos","text":"datos Data frame que contiene los datos de entrada con la columna \"contenido\". sinonimos Vector de sinonimos que se incluiran en la busqueda.","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/extraccion_parrafos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extraer parrafos de una columna de texto ‚Äî extraccion_parrafos","text":"Data frame con una columna adicional 'parrafos_filtrados' que contiene los parrafos extraidos como listas.","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/extraccion_parrafos.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extraer parrafos de una columna de texto ‚Äî extraccion_parrafos","text":"","code":"# \\donttest{ datos <- extraer_noticias_max_res(\"inteligencia artificial\", max_results = 140, subir_a_bd = FALSE) #> Fuentes parseadas: bbclFuentes parseadas: emol-todas #> Total de resultados disponibles en bbcl: 2635 #> Noticia mas reciente disponible en bbcl es de la fecha: 2025-06-20 11:07:02 #> Total de resultados disponibles en emol para la busqueda: 731 #> Total de resultados disponibles en mediosregionales para la busqueda: 226 #> Total de resultados disponibles en guioteca para la busqueda: 67 #> Noticias hasta la fecha: 2013-08-08 datos <- extraccion_parrafos(datos, sinonimos = c(\"IA\", \"AI\")) # }"},{"path":"https://exetrujillo.github.io/datamedios/reference/extraer_noticias_fecha.html","id":null,"dir":"Reference","previous_headings":"","what":"Extraccion de noticias de medios chilenos por rango de fechas ‚Äî extraer_noticias_fecha","title":"Extraccion de noticias de medios chilenos por rango de fechas ‚Äî extraer_noticias_fecha","text":"Esta funcion permite realizar una extraccion automatizada de noticias de BioBio o Los medios de Emol, utilizando un rango de fechas.","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/extraer_noticias_fecha.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extraccion de noticias de medios chilenos por rango de fechas ‚Äî extraer_noticias_fecha","text":"","code":"extraer_noticias_fecha(   search_query,   fecha_inicio,   fecha_fin,   subir_a_bd = TRUE,   fuentes = \"todas\" )"},{"path":"https://exetrujillo.github.io/datamedios/reference/extraer_noticias_fecha.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extraccion de noticias de medios chilenos por rango de fechas ‚Äî extraer_noticias_fecha","text":"search_query Una frase de busqueda (obligatoria). fecha_inicio Fecha de inicio del rango de busqueda en formato \"YYYY-MM-DD\" (obligatoria). fecha_fin Fecha de fin del rango de busqueda en formato \"YYYY-MM-DD\" (obligatoria). subir_a_bd por defecto TRUE, FALSE para test y cosas por el estilo (opcional). fuentes es un string con las fuentes extraer. Puede ser bbcl o las de emol.","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/extraer_noticias_fecha.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extraccion de noticias de medios chilenos por rango de fechas ‚Äî extraer_noticias_fecha","text":"Un dataframe con las noticias extraidas.","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/extraer_noticias_fecha.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extraccion de noticias de medios chilenos por rango de fechas ‚Äî extraer_noticias_fecha","text":"","code":"if (FALSE) { # \\dontrun{ noticias <- extraer_noticias_fecha(\"delincuencia\", \"2025-04-25\", \"2025-04-28\", subir_a_bd = FALSE, fuentes=\"bbcl\") } # }"},{"path":"https://exetrujillo.github.io/datamedios/reference/extraer_noticias_fecha_bbcl.html","id":null,"dir":"Reference","previous_headings":"","what":"Extraccion de noticias de BioBio.cl por rango de fechas ‚Äî extraer_noticias_fecha_bbcl","title":"Extraccion de noticias de BioBio.cl por rango de fechas ‚Äî extraer_noticias_fecha_bbcl","text":"Esta funcion permite realizar una extraccion automatizada de noticias de BioBio.cl utilizando un rango de fechas.","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/extraer_noticias_fecha_bbcl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extraccion de noticias de BioBio.cl por rango de fechas ‚Äî extraer_noticias_fecha_bbcl","text":"","code":"extraer_noticias_fecha_bbcl(search_query, fecha_inicio, fecha_fin)"},{"path":"https://exetrujillo.github.io/datamedios/reference/extraer_noticias_fecha_bbcl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extraccion de noticias de BioBio.cl por rango de fechas ‚Äî extraer_noticias_fecha_bbcl","text":"search_query Una frase de busqueda (obligatoria). fecha_inicio Fecha de inicio del rango de busqueda en formato \"YYYY-MM-DD\" (obligatoria). fecha_fin Fecha de fin del rango de busqueda en formato \"YYYY-MM-DD\" (obligatoria).","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/extraer_noticias_fecha_bbcl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extraccion de noticias de BioBio.cl por rango de fechas ‚Äî extraer_noticias_fecha_bbcl","text":"Un dataframe con las noticias extraidas.","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/extraer_noticias_fecha_bbcl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extraccion de noticias de BioBio.cl por rango de fechas ‚Äî extraer_noticias_fecha_bbcl","text":"","code":"if (FALSE) { # \\dontrun{ noticias <- extraer_noticias_fecha_bbcl(\"inteligencia artificial\", \"2025-01-01\", \"2025-02-24\") } # }"},{"path":"https://exetrujillo.github.io/datamedios/reference/extraer_noticias_fecha_emol.html","id":null,"dir":"Reference","previous_headings":"","what":"Extraccion de noticias de emol.com por rango de fechas ‚Äî extraer_noticias_fecha_emol","title":"Extraccion de noticias de emol.com por rango de fechas ‚Äî extraer_noticias_fecha_emol","text":"Esta funcion permite realizar una extraccion automatizada de noticias de emol.com utilizando un rango de fechas.","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/extraer_noticias_fecha_emol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extraccion de noticias de emol.com por rango de fechas ‚Äî extraer_noticias_fecha_emol","text":"","code":"extraer_noticias_fecha_emol(search_query, fecha_inicio, fecha_fin, fuente)"},{"path":"https://exetrujillo.github.io/datamedios/reference/extraer_noticias_fecha_emol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extraccion de noticias de emol.com por rango de fechas ‚Äî extraer_noticias_fecha_emol","text":"search_query Una frase de busqueda (obligatoria). fecha_inicio Fecha de inicio del rango de busqueda en formato \"YYYY-MM-DD\" (obligatoria). fecha_fin Fecha de fin del rango de busqueda en formato \"YYYY-MM-DD\" (obligatoria). fuente Fuente de emol para iterar (obligatoria).","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/extraer_noticias_fecha_emol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extraccion de noticias de emol.com por rango de fechas ‚Äî extraer_noticias_fecha_emol","text":"Un dataframe con las noticias extraidas.","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/extraer_noticias_fecha_emol.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extraccion de noticias de emol.com por rango de fechas ‚Äî extraer_noticias_fecha_emol","text":"","code":"if (FALSE) { # \\dontrun{ noticias <- extraer_noticias_fecha_emol(\"inteligencia artificial\", \"2025-01-01\", \"2025-02-24\", fuente=\"emol\") } # }"},{"path":"https://exetrujillo.github.io/datamedios/reference/extraer_noticias_max_res.html","id":null,"dir":"Reference","previous_headings":"","what":"Extraccion de noticias de medios chilenos por cantidad maxima de resultados ‚Äî extraer_noticias_max_res","title":"Extraccion de noticias de medios chilenos por cantidad maxima de resultados ‚Äî extraer_noticias_max_res","text":"Esta funcion permite realizar una extraccion automatizada de noticias de BioBio y fuentes de El Mercurio.","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/extraer_noticias_max_res.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extraccion de noticias de medios chilenos por cantidad maxima de resultados ‚Äî extraer_noticias_max_res","text":"","code":"extraer_noticias_max_res(   search_query,   max_results = NULL,   subir_a_bd = TRUE,   fuentes = \"todas\" )"},{"path":"https://exetrujillo.github.io/datamedios/reference/extraer_noticias_max_res.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extraccion de noticias de medios chilenos por cantidad maxima de resultados ‚Äî extraer_noticias_max_res","text":"search_query Una frase de busqueda (obligatoria). max_results Numero maximo de resultados extraer (opcional, por defecto todos). subir_a_bd por defecto TRUE, FALSE para test y cosas por el estilo (opcional). fuentes por defecto marca todas las fuentes, pero se puede elegir una o varias de las disponibles en el README. (opcional)","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/extraer_noticias_max_res.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extraccion de noticias de medios chilenos por cantidad maxima de resultados ‚Äî extraer_noticias_max_res","text":"Un dataframe con las noticias extraidas.","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/extraer_noticias_max_res.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extraccion de noticias de medios chilenos por cantidad maxima de resultados ‚Äî extraer_noticias_max_res","text":"Es importante mencionar que si tiene mas de una fuente seleccionada, la cantidad maxima de resultados se aplicara para cada una de las fuentes, es decir, si pones max_results = 10 y tienes fuentes = \"emol,guioteca,bbcl\" tendras como maximo 30 resultados.","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/extraer_noticias_max_res.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extraccion de noticias de medios chilenos por cantidad maxima de resultados ‚Äî extraer_noticias_max_res","text":"","code":"if (FALSE) { # \\dontrun{ noticias <- extraer_noticias_max_res(\"inteligencia artificial\", max_results = 20, fuentes=\"bbcl, emol\", subir_a_bd = FALSE) } # }"},{"path":"https://exetrujillo.github.io/datamedios/reference/extraer_noticias_max_res_bbcl.html","id":null,"dir":"Reference","previous_headings":"","what":"Extraccion de noticias de BioBio.cl por cantidad maxima de resultados ‚Äî extraer_noticias_max_res_bbcl","title":"Extraccion de noticias de BioBio.cl por cantidad maxima de resultados ‚Äî extraer_noticias_max_res_bbcl","text":"Esta funcion permite realizar una extraccion automatizada de noticias de BioBio.cl entregando como parametro una cantidad maxima de resultados.","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/extraer_noticias_max_res_bbcl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extraccion de noticias de BioBio.cl por cantidad maxima de resultados ‚Äî extraer_noticias_max_res_bbcl","text":"","code":"extraer_noticias_max_res_bbcl(search_query, max_results = NULL)"},{"path":"https://exetrujillo.github.io/datamedios/reference/extraer_noticias_max_res_bbcl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extraccion de noticias de BioBio.cl por cantidad maxima de resultados ‚Äî extraer_noticias_max_res_bbcl","text":"search_query Una frase de busqueda (obligatoria). max_results Cantidad maxima de resultados (opcional).","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/extraer_noticias_max_res_bbcl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extraccion de noticias de BioBio.cl por cantidad maxima de resultados ‚Äî extraer_noticias_max_res_bbcl","text":"Un dataframe con las noticias extraidas.","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/extraer_noticias_max_res_bbcl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extraccion de noticias de BioBio.cl por cantidad maxima de resultados ‚Äî extraer_noticias_max_res_bbcl","text":"","code":"if (FALSE) { # \\dontrun{ noticias <- extraer_noticias_fecha_bbcl(\"inteligencia artificial\", \"2025-01-01\", \"2025-02-24\") } # }"},{"path":"https://exetrujillo.github.io/datamedios/reference/extraer_noticias_max_res_emol.html","id":null,"dir":"Reference","previous_headings":"","what":"Extraccion de noticias de Emol.com ‚Äî extraer_noticias_max_res_emol","title":"Extraccion de noticias de Emol.com ‚Äî extraer_noticias_max_res_emol","text":"Esta funcion permite extraer noticias de las fuentes de Emol, tanto de las noticias pagas de emol, como de guioteca y los medios regionales de El Mercurio","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/extraer_noticias_max_res_emol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extraccion de noticias de Emol.com ‚Äî extraer_noticias_max_res_emol","text":"","code":"extraer_noticias_max_res_emol(search_query, max_results = NULL, fuente)"},{"path":"https://exetrujillo.github.io/datamedios/reference/extraer_noticias_max_res_emol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extraccion de noticias de Emol.com ‚Äî extraer_noticias_max_res_emol","text":"search_query Una frase de busqueda (obligatoria). max_results Numero maximo de resultados extraer (opcional, por defecto todos). fuente Fuente de emol para iterar (obligatoria).","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/extraer_noticias_max_res_emol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extraccion de noticias de Emol.com ‚Äî extraer_noticias_max_res_emol","text":"Un dataframe con las noticias extraidas.","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/extraer_noticias_max_res_emol.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extraccion de noticias de Emol.com ‚Äî extraer_noticias_max_res_emol","text":"","code":"if (FALSE) { # \\dontrun{ noticias <- extraer_noticias_max_res_emol(\"inteligencia artificial\", \"2025-01-01\", \"2025-02-24\", fuente=\"mediosregionales\") } # }"},{"path":"https://exetrujillo.github.io/datamedios/reference/grafico_comparacion_medios.html","id":null,"dir":"Reference","previous_headings":"","what":"Grafico de comparacion de medios por periodo (Interactivo) ‚Äî grafico_comparacion_medios","title":"Grafico de comparacion de medios por periodo (Interactivo) ‚Äî grafico_comparacion_medios","text":"Esta funcion genera un grafico interactivo que compara la cantidad de publicaciones entre diferentes medios de medios, agrupadas por dia o por mes, con opcion de tema dark o light.","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/grafico_comparacion_medios.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grafico de comparacion de medios por periodo (Interactivo) ‚Äî grafico_comparacion_medios","text":"","code":"grafico_comparacion_medios(   datos,   titulo,   fecha_inicio = NULL,   fecha_fin = NULL,   medios = NULL,   agrupar_por = \"day\",   tema = \"light\",   tipo_grafico = \"lineas\" )"},{"path":"https://exetrujillo.github.io/datamedios/reference/grafico_comparacion_medios.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grafico de comparacion de medios por periodo (Interactivo) ‚Äî grafico_comparacion_medios","text":"datos Data frame con los datos procesados, que debe incluir las columnas `fecha` y `medio`. titulo Texto que aparecera en el titulo del grafico. fecha_inicio Fecha de inicio para la construccion del grafico en formato YYYY-MM-DD (opcional). fecha_fin Fecha de finalizacion para la construccion del grafico en formato YYYY-MM-DD (opcional). medios Vector de strings con las medios comparar. Si es NULL, usa todas las medios disponibles. agrupar_por Cadena de texto que especifica el periodo de agrupacion. Valores validos son `\"day\"` (por defecto) o `\"month\"`. tema Tema del grafico. Valores validos son `\"light\"` (por defecto) o `\"dark\"`. tipo_grafico Tipo de visualizacion. Valores validos son `\"lineas\"` (por defecto) o `\"barras\"`.","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/grafico_comparacion_medios.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grafico de comparacion de medios por periodo (Interactivo) ‚Äî grafico_comparacion_medios","text":"Un grafico plotly interactivo que muestra la comparacion de publicaciones por medio y periodo.","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/grafico_comparacion_medios.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grafico de comparacion de medios por periodo (Interactivo) ‚Äî grafico_comparacion_medios","text":"","code":"if (FALSE) { # \\dontrun{ # Comparar todas las medios por mes datos <- extraer_noticias_fecha(\"delincuencia\", \"2024-01-01\", \"2025-01-01\", subir_a_bd = FALSE) grafico_comparacion_medios(datos, titulo = \"Cobertura de Delincuencia por Medio\",                             agrupar_por = \"month\", tema = \"dark\")  # Comparar medios especificas por dia grafico_comparacion_medios(datos, titulo = \"Comparacion BBCl vs emol\",                             medios = c(\"bbcl\", \"emol\"),                             fecha_inicio = \"2024-06-01\", fecha_fin = \"2024-06-30\",                             agrupar_por = \"day\", tipo_grafico = \"barras\") } # }"},{"path":"https://exetrujillo.github.io/datamedios/reference/grafico_notas_fecha.html","id":null,"dir":"Reference","previous_headings":"","what":"Grafico de notas por periodo (interactivo) ‚Äî grafico_notas_fecha","title":"Grafico de notas por periodo (interactivo) ‚Äî grafico_notas_fecha","text":"Esta funcion genera un grafico interactivo que muestra la cantidad de publicaciones agrupadas por dia o por mes, con opcion de tema dark o light.","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/grafico_notas_fecha.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grafico de notas por periodo (interactivo) ‚Äî grafico_notas_fecha","text":"","code":"grafico_notas_fecha(   datos,   titulo,   fecha_inicio = NULL,   fecha_fin = NULL,   agrupar_por = \"day\",   tema = \"light\" )"},{"path":"https://exetrujillo.github.io/datamedios/reference/grafico_notas_fecha.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grafico de notas por periodo (interactivo) ‚Äî grafico_notas_fecha","text":"datos Data frame con los datos procesados, que debe incluir la columna `fecha` en formato YYYY-MM-DD. titulo Texto que aparecera en el titulo del grafico. fecha_inicio Fecha de inicio para la construccion del grafico en formato YYYY-MM-DD (opcional). fecha_fin Fecha de finalizacion para la construccion del grafico en formato YYYY-MM-DD (opcional). agrupar_por Cadena de texto que especifica el periodo de agrupacion. Valores validos son `\"day\"` (por defecto) o `\"month\"`. tema Tema del grafico. Valores validos son `\"light\"` (por defecto) o `\"dark\"`.","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/grafico_notas_fecha.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grafico de notas por periodo (interactivo) ‚Äî grafico_notas_fecha","text":"Un grafico plotly interactivo que muestra la cantidad de publicaciones por el periodo seleccionado.","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/grafico_notas_fecha.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grafico de notas por periodo (interactivo) ‚Äî grafico_notas_fecha","text":"","code":"if (FALSE) { # \\dontrun{ # Ejemplo con tema dark, agrupando por mes datos <- extraer_noticias_fecha(\"cambio climatico\", \"2024-01-01\",\"2025-01-01\", subir_a_bd = FALSE) grafico_notas_fecha(datos, titulo = \"Cambio Climatico (por mes)\",                     agrupar_por = \"month\", tema = \"dark\")  # Ejemplo con tema light, agrupando por dia grafico_notas_fecha(datos, titulo = \"Cambio Climatico (por dia)\",                     fecha_inicio = \"2024-01-01\", fecha_fin = \"2024-03-31\",                     tema = \"light\") } # }"},{"path":"https://exetrujillo.github.io/datamedios/reference/grafico_notas_por_mes.html","id":null,"dir":"Reference","previous_headings":"","what":"Grafico de notas por mes ‚Äî grafico_notas_por_mes","title":"Grafico de notas por mes ‚Äî grafico_notas_por_mes","text":"Esta funcion genera un grafico de linea que muestra la cantidad de publicaciones agrupadas por mes.","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/grafico_notas_por_mes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grafico de notas por mes ‚Äî grafico_notas_por_mes","text":"","code":"grafico_notas_por_mes(datos, titulo, fecha_inicio = NULL, fecha_fin = NULL)"},{"path":"https://exetrujillo.github.io/datamedios/reference/grafico_notas_por_mes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grafico de notas por mes ‚Äî grafico_notas_por_mes","text":"datos Data frame con los datos procesados, que debe incluir la columna `fecha` en formato YYYY-MM-DD. titulo Texto que aparecera en el titulo del grafico. fecha_inicio Fecha de inicio para la construccion del grafico en formato YYYY-MM-DD (opcional). fecha_fin Fecha de finalizacion para la construccion del grafico en formato YYYY-MM-DD (opcional).","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/grafico_notas_por_mes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grafico de notas por mes ‚Äî grafico_notas_por_mes","text":"Un grafico ggplot2 que muestra la cantidad de publicaciones por mes.","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/grafico_notas_por_mes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grafico de notas por mes ‚Äî grafico_notas_por_mes","text":"","code":"if (FALSE) { # \\dontrun{ datos <- extraer_noticias_fecha(\"cambio climatico\", \"2024-01-01\",\"2025-01-01\", subir_a_bd = FALSE) grafico_notas_por_mes(datos, titulo = \"Cambio Climatico\", fecha_inicio = \"2024-01-01\", fecha_fin = \"2024-06-06\") } # }"},{"path":"https://exetrujillo.github.io/datamedios/reference/helper_extraer_resumen.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper para extraer el resumen (bajada) de datos de Emol ‚Äî helper_extraer_resumen","title":"Helper para extraer el resumen (bajada) de datos de Emol ‚Äî helper_extraer_resumen","text":"Esta funcion interna procesa la columna `_source.bajada` de una fila de datos de Emol para extraer el texto del resumen. Maneja casos donde `_source.bajada` puede ser NULL, un dataframe, una lista, o un valor atomico.","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/helper_extraer_resumen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper para extraer el resumen (bajada) de datos de Emol ‚Äî helper_extraer_resumen","text":"","code":"helper_extraer_resumen(bajada_val)"},{"path":"https://exetrujillo.github.io/datamedios/reference/helper_extraer_resumen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper para extraer el resumen (bajada) de datos de Emol ‚Äî helper_extraer_resumen","text":"bajada_val El contenido de la columna `_source.bajada` de la fila actual.","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/helper_extraer_resumen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper para extraer el resumen (bajada) de datos de Emol ‚Äî helper_extraer_resumen","text":"Un string (character) con el texto del resumen, o `NA_character_`   si se puede extraer o si ocurre un error.","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/helper_extraer_temas.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper para extraer y procesar los temas de datos de Emol ‚Äî helper_extraer_temas","title":"Helper para extraer y procesar los temas de datos de Emol ‚Äî helper_extraer_temas","text":"Esta funcion interna procesa las columnas `_source.seccion`, `_source.subSeccion` (si aplica), y `_source.temas` de una fila de datos de Emol para generar una lista de temas procesados. Los temas se convierten minusculas y los espacios se reemplazan por guiones.","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/helper_extraer_temas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper para extraer y procesar los temas de datos de Emol ‚Äî helper_extraer_temas","text":"","code":"helper_extraer_temas(   source_seccion,   source_subseccion,   source_temas,   fuente_actual )"},{"path":"https://exetrujillo.github.io/datamedios/reference/helper_extraer_temas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper para extraer y procesar los temas de datos de Emol ‚Äî helper_extraer_temas","text":"source_seccion El contenido de la columna `_source.seccion`. source_subseccion El contenido de la columna `_source.subSeccion`. source_temas El contenido de la columna `_source.temas`. Puede ser un dataframe, lista, vector, o NULL. fuente_actual Un string que indica la fuente (e.g., \"mediosregionales\").","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/helper_extraer_temas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper para extraer y procesar los temas de datos de Emol ‚Äî helper_extraer_temas","text":"Una lista que contiene un unico elemento: un vector de strings (character)   con los temas procesados y unicos. Si hay temas, devuelve una lista   conteniendo un vector de caracteres vacio (`character(0)`).","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/helper_extraer_url_imagen.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper para extraer la URL de la imagen de datos de Emol ‚Äî helper_extraer_url_imagen","title":"Helper para extraer la URL de la imagen de datos de Emol ‚Äî helper_extraer_url_imagen","text":"Esta funcion interna procesa las columnas relevantes de una fila de datos de Emol para extraer la URL de la imagen principal de la noticia. Prioriza `_source.tablas.tablaMedios` para fuentes \"emol\" y \"mediosregionales\", y recurre `_source.imagen` para otras o si la primera falla. Maneja diferentes estructuras de datos (dataframes, listas, valores atomicos).","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/helper_extraer_url_imagen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper para extraer la URL de la imagen de datos de Emol ‚Äî helper_extraer_url_imagen","text":"","code":"helper_extraer_url_imagen(source_tablas_medios, source_imagen, fuente_actual)"},{"path":"https://exetrujillo.github.io/datamedios/reference/helper_extraer_url_imagen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper para extraer la URL de la imagen de datos de Emol ‚Äî helper_extraer_url_imagen","text":"source_tablas_medios El contenido de la columna `_source.tablas.tablaMedios` de la fila actual. Puede ser un dataframe, lista, o NULL. source_imagen El contenido de la columna `_source.imagen` de la fila actual. Puede ser un string, lista, o NULL. fuente_actual Un string que indica la fuente de la noticia (e.g., \"emol\", \"guioteca\", \"mediosregionales\").","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/helper_extraer_url_imagen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper para extraer la URL de la imagen de datos de Emol ‚Äî helper_extraer_url_imagen","text":"Un string (character) con la URL de la imagen, o `NA_character_` si   se puede extraer una URL valida o si ocurre un error.","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/init_req_bbcl.html","id":null,"dir":"Reference","previous_headings":"","what":"Inicializa una solicitud a BioBio.cl y retorna el primer caso de busqueda ‚Äî init_req_bbcl","title":"Inicializa una solicitud a BioBio.cl y retorna el primer caso de busqueda ‚Äî init_req_bbcl","text":"Esta funcion permite realizar una consulta inicial BioBio.cl utilizando una frase de busqueda.","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/init_req_bbcl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inicializa una solicitud a BioBio.cl y retorna el primer caso de busqueda ‚Äî init_req_bbcl","text":"","code":"init_req_bbcl(search_query)"},{"path":"https://exetrujillo.github.io/datamedios/reference/init_req_bbcl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inicializa una solicitud a BioBio.cl y retorna el primer caso de busqueda ‚Äî init_req_bbcl","text":"search_query Una frase de busqueda (obligatoria).","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/init_req_bbcl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inicializa una solicitud a BioBio.cl y retorna el primer caso de busqueda ‚Äî init_req_bbcl","text":"Un dataframe con el primer caso de la busqueda.","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/init_req_bbcl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inicializa una solicitud a BioBio.cl y retorna el primer caso de busqueda ‚Äî init_req_bbcl","text":"","code":"if (FALSE) { # \\dontrun{ primer_caso <- init_req_bbcl(\"inteligencia artificial\") } # }"},{"path":"https://exetrujillo.github.io/datamedios/reference/init_req_emol.html","id":null,"dir":"Reference","previous_headings":"","what":"Inicializa una solicitud a emol.com y retorna el primer caso de busqueda ‚Äî init_req_emol","title":"Inicializa una solicitud a emol.com y retorna el primer caso de busqueda ‚Äî init_req_emol","text":"Esta funcion permite realizar una consulta inicial emol.com utilizando una frase de busqueda.","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/init_req_emol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inicializa una solicitud a emol.com y retorna el primer caso de busqueda ‚Äî init_req_emol","text":"","code":"init_req_emol(search_query, fuentes = \"emol-todas\")"},{"path":"https://exetrujillo.github.io/datamedios/reference/init_req_emol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inicializa una solicitud a emol.com y retorna el primer caso de busqueda ‚Äî init_req_emol","text":"search_query Una frase de busqueda (obligatoria). fuentes Un string donde se ponen las fuentes de emol consultar","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/init_req_emol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inicializa una solicitud a emol.com y retorna el primer caso de busqueda ‚Äî init_req_emol","text":"Un dataframe con el primer caso de la busqueda.","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/init_req_emol.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inicializa una solicitud a emol.com y retorna el primer caso de busqueda ‚Äî init_req_emol","text":"","code":"if (FALSE) { # \\dontrun{ primer_caso <- init_req_emol(\"Boric\", fuentes=\"emol\") } # }"},{"path":"https://exetrujillo.github.io/datamedios/reference/iteracion_emol.html","id":null,"dir":"Reference","previous_headings":"","what":"Inicializa una solicitud a emol.com y retorna maximo 10 noticias ‚Äî iteracion_emol","title":"Inicializa una solicitud a emol.com y retorna maximo 10 noticias ‚Äî iteracion_emol","text":"Esta funcion auxiliar llama emol.com utilizando una frase de busqueda. Entrega como maximo 10 resultados. Se debe llamar desde otras funciones solo con una fuente la vez, es decir, sin llamar emol-todas.","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/iteracion_emol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inicializa una solicitud a emol.com y retorna maximo 10 noticias ‚Äî iteracion_emol","text":"","code":"iteracion_emol(search_query, page = 0, fuentes = \"emol-todas\")"},{"path":"https://exetrujillo.github.io/datamedios/reference/iteracion_emol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inicializa una solicitud a emol.com y retorna maximo 10 noticias ‚Äî iteracion_emol","text":"search_query Una frase de busqueda (obligatoria). page La pagina de busqueda para iterar, es un int fuentes Es un string que deberia tener solo fuentes de emol posibles separadas por comas.","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/iteracion_emol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inicializa una solicitud a emol.com y retorna maximo 10 noticias ‚Äî iteracion_emol","text":"Un dataframe con el caso de la busqueda, incluyendo solo columnas especificas.","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/iteracion_emol.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inicializa una solicitud a emol.com y retorna maximo 10 noticias ‚Äî iteracion_emol","text":"","code":"if (FALSE) { # \\dontrun{ primer_caso <- iteracion_emol(\"Boric\", fuentes=\"emol-todas\") } # }"},{"path":"https://exetrujillo.github.io/datamedios/reference/limpieza_notas.html","id":null,"dir":"Reference","previous_headings":"","what":"Funcion para limpiar notas de contenido HTML ‚Äî limpieza_notas","title":"Funcion para limpiar notas de contenido HTML ‚Äî limpieza_notas","text":"Esta funcion permite limpiar por completo las notas eliminando codigos y secciones irrelevantes. Verifica que el input sea un data frame con una columna llamada `contenido`.","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/limpieza_notas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Funcion para limpiar notas de contenido HTML ‚Äî limpieza_notas","text":"","code":"limpieza_notas(datos, sinonimos = c())"},{"path":"https://exetrujillo.github.io/datamedios/reference/limpieza_notas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Funcion para limpiar notas de contenido HTML ‚Äî limpieza_notas","text":"datos Data frame donde estan almacenadas las notas sinonimos Un vector de character","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/limpieza_notas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Funcion para limpiar notas de contenido HTML ‚Äî limpieza_notas","text":"Un dataframe con el contenido limpio en la columna contenido_limpio","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/limpieza_notas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Funcion para limpiar notas de contenido HTML ‚Äî limpieza_notas","text":"","code":"# \\donttest{ datos <- extraer_noticias_max_res(\"inteligencia artificial\", max_results= 150, subir_a_bd = FALSE) #> Fuentes parseadas: bbclFuentes parseadas: emol-todas #> Total de resultados disponibles en bbcl: 2635 #> Noticia mas reciente disponible en bbcl es de la fecha: 2025-06-20 11:07:02 #> Total de resultados disponibles en emol para la busqueda: 731 #> Total de resultados disponibles en mediosregionales para la busqueda: 226 #> Total de resultados disponibles en guioteca para la busqueda: 67 #> Noticias hasta la fecha: 2013-08-08 datos_proc <- limpieza_notas(datos, sinonimos = c(\"IA\", \"AI\")) # }"},{"path":"https://exetrujillo.github.io/datamedios/reference/parserFuentes.html","id":null,"dir":"Reference","previous_headings":"","what":"Parser de Fuentes ‚Äî parserFuentes","title":"Parser de Fuentes ‚Äî parserFuentes","text":"Esta funcion toma un string que contiene nombres de fuentes separados por comas y devuelve una lista con cada fuente como un elemento separado, sin espacios en blanco adicionales.","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/parserFuentes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parser de Fuentes ‚Äî parserFuentes","text":"","code":"parserFuentes(cadena)"},{"path":"https://exetrujillo.github.io/datamedios/reference/parserFuentes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parser de Fuentes ‚Äî parserFuentes","text":"cadena Un string que contiene nombres de fuentes separados por comas.","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/parserFuentes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parser de Fuentes ‚Äî parserFuentes","text":"Una lista de strings, cada uno representando una fuente sin espacios en blanco adicionales.","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/parserFuentes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parser de Fuentes ‚Äî parserFuentes","text":"","code":"parserFuentes(\"bbcl, emol, mediosregionales, \") #> [[1]] #> [1] \"bbcl\" #>  #> [[2]] #> [1] \"emol\" #>  #> [[3]] #> [1] \"mediosregionales\" #>  parserFuentes(\" emol-todas, bbcl\") #> [[1]] #> [1] \"emol-todas\" #>  #> [[2]] #> [1] \"bbcl\" #>"},{"path":"https://exetrujillo.github.io/datamedios/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator ‚Äî %>%","title":"Pipe operator ‚Äî %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator ‚Äî %>%","text":"","code":"lhs %>% rhs"},{"path":"https://exetrujillo.github.io/datamedios/reference/tabla_frecuencia_palabras.html","id":null,"dir":"Reference","previous_headings":"","what":"Generar una tabla estilizada con las palabras mas frecuentes ‚Äî tabla_frecuencia_palabras","title":"Generar una tabla estilizada con las palabras mas frecuentes ‚Äî tabla_frecuencia_palabras","text":"Esta funcion procesa la columna 'contenido_limpio' de un dataframe, tokeniza el texto, cuenta la frecuencia de cada palabra y genera una tabla con las palabras mas frecuentes.","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/tabla_frecuencia_palabras.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generar una tabla estilizada con las palabras mas frecuentes ‚Äî tabla_frecuencia_palabras","text":"","code":"tabla_frecuencia_palabras(datos, max_words, stop_words = NULL)"},{"path":"https://exetrujillo.github.io/datamedios/reference/tabla_frecuencia_palabras.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generar una tabla estilizada con las palabras mas frecuentes ‚Äî tabla_frecuencia_palabras","text":"datos Data frame que contiene la columna 'contenido_limpio'. max_words Numero maximo de palabras que se mostraran en la tabla. stop_words Vector opcional de palabras que se deben excluir del conteo.","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/tabla_frecuencia_palabras.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generar una tabla estilizada con las palabras mas frecuentes ‚Äî tabla_frecuencia_palabras","text":"Una tabla con las palabras mas frecuentes.","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/tabla_frecuencia_palabras.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generar una tabla estilizada con las palabras mas frecuentes ‚Äî tabla_frecuencia_palabras","text":"","code":"datos <- data.frame(   contenido_limpio = c(     \"La ministra de Defensa Maya Fernandez enfrenta cuestionamientos     el presidente Gabriel Boric solicita transparencia en los procesos.     Renovacion Nacional pide la renuncia de Maya Fernandez debido a la polemica.     La transparencia es fundamental en la politica y la gestion publica\"   ),   stringsAsFactors = FALSE )  # Probar la funcion con el dataframe de ejemplo tabla_frecuencia_palabras(datos, max_words = 5, stop_words = c())  {\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\"],[\"la\",\"de\",\"en\",\"fernandez\",\"maya\"],[6,2,2,2,2]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>Palabra<\\/th>\\n      <th>Frecuencia<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":10,\"autoWidth\":true,\"columnDefs\":[{\"className\":\"dt-center\",\"targets\":\"_all\"},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"word\",\"targets\":1},{\"name\":\"n\",\"targets\":2}],\"order\":[],\"orderClasses\":false},\"selection\":{\"mode\":\"multiple\",\"selected\":null,\"target\":\"row\",\"selectable\":null}},\"evals\":[],\"jsHooks\":[]}"},{"path":"https://exetrujillo.github.io/datamedios/reference/word_cloud.html","id":null,"dir":"Reference","previous_headings":"","what":"Funcion de nube de palabras ‚Äî word_cloud","title":"Funcion de nube de palabras ‚Äî word_cloud","text":"Esta funcion permite realizar una nube de palabras con las palabras m√°s frecuentes del corpus de noticias.","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/word_cloud.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Funcion de nube de palabras ‚Äî word_cloud","text":"","code":"word_cloud(datos, max_words, stop_words = NULL)"},{"path":"https://exetrujillo.github.io/datamedios/reference/word_cloud.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Funcion de nube de palabras ‚Äî word_cloud","text":"datos data frame que incluye la columna contenido_limpio. max_words Cantidad maxima de palabras que apareceran en la nube. stop_words Definir las palabras que seran ignoradas en la visualizacion. Debe ser un vector de car√°cteres.","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/word_cloud.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Funcion de nube de palabras ‚Äî word_cloud","text":"Una nube de palabras con las palabras mas frecuentes.","code":""},{"path":"https://exetrujillo.github.io/datamedios/reference/word_cloud.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Funcion de nube de palabras ‚Äî word_cloud","text":"","code":"if (FALSE) { # \\dontrun{ datos <- extraer_noticias_fecha(\"Boric\", \"2025-03-01\", \"2025-04-01\", fuentes=\"bbcl\", subir_a_bd = FALSE) datos_proc <- limpieza_notas(datos) word_cloud(datos_proc, max_words = 50, stop_words = c(\"es\", \"la\")) } # }"},{"path":[]},{"path":"https://exetrujillo.github.io/datamedios/news/index.html","id":"agregrado-added-1-2-2","dir":"Changelog","previous_headings":"","what":"Agregrado (Added)","title":"datamedios 1.2.2","text":"Se cre√≥ una nueva funci√≥n grafico_notas_fecha que reemplaza la antigua grafico_notas_por_mes. Esta funci√≥n permite especificar d√≠a o mes, y fue optimizada utilizando plotly y ggplotly para agregar interactividad. Tiene como par√°metro tema, con opci√≥n light y dark. Con un funcionamiento similar, se agreg√≥ la funci√≥n grafico_comparacion_medios. Sumado las funciones de grafico_notas_fecha, recibe un vector de strings con los nombres de los medios comparar. Incluye un par√°metro tipo_grafico para elegir entre gr√°fico de barras o l√≠neas.","code":""},{"path":"https://exetrujillo.github.io/datamedios/news/index.html","id":"modificado-changed-1-2-2","dir":"Changelog","previous_headings":"","what":"Modificado (Changed)","title":"datamedios 1.2.2","text":"La funci√≥n grafico_notas_por_mes ser√° eliminada prontamente. Por mientras, se puede usar pero muestra un aviso para que los usuarios utilicen grafico_notas_fecha.","code":""},{"path":"https://exetrujillo.github.io/datamedios/news/index.html","id":"datamedios-121","dir":"Changelog","previous_headings":"","what":"datamedios 1.2.1","title":"datamedios 1.2.1","text":"CRAN release: 2025-05-19","code":""},{"path":"https://exetrujillo.github.io/datamedios/news/index.html","id":"corregido-fixed-1-2-1","dir":"Changelog","previous_headings":"","what":"Corregido (Fixed)","title":"datamedios 1.2.1","text":"Se mejor√≥ significativamente la robustez de las funciones de extracci√≥n para Emol (extraer_noticias_fecha_emol, extraer_noticias_max_res_emol) al procesar la estructura de datos devuelta por la API, especialmente para campos como resumen (_source.bajada), URL de imagen (_source.tablas.tablaMedios, _source.imagen) y temas (_source.temas). Esto previene errores que causaban la p√©rdida de todos los datos extra√≠dos de Emol. Las funciones de extracci√≥n de Emol ahora utilizan funciones auxiliares (helpers) internas para procesar campos complejos, mejorando la legibilidad y el manejo de errores espec√≠ficos de cada campo. Se implement√≥ un manejo de errores m√°s informativo en las funciones de extracci√≥n de Emol: si ocurre un error cr√≠tico durante el procesamiento final de los datos, se guarda una muestra de los datos crudos problem√°ticos en un archivo .rds para facilitar la depuraci√≥n. Se mejor√≥ la robustez de la funci√≥n limpieza_notas para manejar correctamente el contenido de noticias que puede ser HTML crudo, texto plano, o valores NA. Se solucion√≥ un error en limpieza_notas que ocurr√≠a cuando el contenido de una noticia era NA, evitando la detenci√≥n de la funci√≥n. La funci√≥n limpieza_notas ahora maneja de forma m√°s predecible la inicializaci√≥n de la columna contenido_limpio, usando siempre la columna contenido como base en cada ejecuci√≥n.","code":""},{"path":"https://exetrujillo.github.io/datamedios/news/index.html","id":"mejorado-improved-1-2-1","dir":"Changelog","previous_headings":"","what":"Mejorado (Improved)","title":"datamedios 1.2.1","text":"Se optimiz√≥ la funci√≥n limpieza_notas para detectar si el contenido es HTML antes de intentar un parseo completo, mejorando la eficiencia para contenidos que ya son texto plano. Se refin√≥ la l√≥gica de filtrado por t√©rminos de b√∫squeda y sin√≥nimos en limpieza_notas para ser m√°s consistente con la presencia de valores NA en el contenido. Se estandariz√≥ el uso de NA_character_ en los helpers de extracci√≥n de Emol para asegurar consistencia en los datos procesados.","code":""},{"path":"https://exetrujillo.github.io/datamedios/news/index.html","id":"datamedios-120","dir":"Changelog","previous_headings":"","what":"datamedios 1.2.0","title":"datamedios 1.2.0","text":"CRAN release: 2025-04-28","code":""},{"path":"https://exetrujillo.github.io/datamedios/news/index.html","id":"agregado-added-1-2-0","dir":"Changelog","previous_headings":"","what":"Agregado (Added)","title":"datamedios 1.2.0","text":"Nuevas fuentes para la extracci√≥n de noticias de medios chilenos. Funciones auxiliares para utilizar un enfoque iterativo controlado.","code":""},{"path":"https://exetrujillo.github.io/datamedios/news/index.html","id":"mejorado-improved-1-2-0","dir":"Changelog","previous_headings":"","what":"Mejorado (Improved)","title":"datamedios 1.2.0","text":"Modificaci√≥n por modularizaci√≥n de las funciones de extracci√≥n de datos por fecha o por cantidad m√°xima de resultados. Se modifica la funci√≥n de limpieza para que responda los formatos de las noticias de las nuevas fuentes.","code":""},{"path":"https://exetrujillo.github.io/datamedios/news/index.html","id":"datamedios-110","dir":"Changelog","previous_headings":"","what":"datamedios 1.1.0","title":"datamedios 1.1.0","text":"CRAN release: 2025-02-18","code":""},{"path":"https://exetrujillo.github.io/datamedios/news/index.html","id":"mejorado-improved-1-1-0","dir":"Changelog","previous_headings":"","what":"Mejorado (Improved)","title":"datamedios 1.1.0","text":"Mejor rendimiento de funciones.","code":""},{"path":"https://exetrujillo.github.io/datamedios/news/index.html","id":"datamedios-100","dir":"Changelog","previous_headings":"","what":"datamedios 1.0.0","title":"datamedios 1.0.0","text":"Initial CRAN submission.","code":""}]
